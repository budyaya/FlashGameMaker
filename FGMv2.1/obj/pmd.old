<?xml version="1.0" encoding="UTF-8"?>
<pmd version="4.2.1" timestamp="Thu Sep 23 10:16:54 CEST 2010">
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/add/screen/ConfigScreen.as">
      <violation beginline="68" endline="68" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.EmptyPrivateMethod" ruleset="All Flex Rules" package="framework.add.screen" class="ConfigScreen.as" externalInfoUrl="" priority="1">This private method (onCancelClick) is used but its content is empty. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/add/screen/GameScreen.as">
      <violation beginline="40" endline="40" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.unused.UnusedField" ruleset="All Flex Rules" package="framework.add.screen" class="GameScreen.as" externalInfoUrl="" priority="1">This private attribute (_returnBt) does not seem to be used. </violation>
      <violation beginline="48" endline="48" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.EmptyPrivateMethod" ruleset="All Flex Rules" package="framework.add.screen" class="GameScreen.as" externalInfoUrl="" priority="1">This private method (initVar) is used but its content is empty. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/add/screen/InterfaceScreen.as">
      <violation beginline="41" endline="41" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="framework.add.screen" class="InterfaceScreen.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="62" endline="62" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="framework.add.screen" class="InterfaceScreen.as" externalInfoUrl="" priority="1">This private method (removeListener) does not seem to be used. </violation>
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="framework.add.screen" class="InterfaceScreen.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 6 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/add/screen/MenuScreen.as">
      <violation beginline="122" endline="122" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="framework.add.screen" class="MenuScreen.as" externalInfoUrl="" priority="1">This private method (updateErrorText) does not seem to be used. </violation>
      <violation beginline="126" endline="126" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="framework.add.screen" class="MenuScreen.as" externalInfoUrl="" priority="1">This private method (updateStatutText) does not seem to be used. </violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="framework.add.screen" class="MenuScreen.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 8 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/architecture/component/KeyboardInputComponent.as">
      <violation beginline="60" endline="60" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="framework.core.architecture.component" class="KeyboardInputComponent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="65" endline="65" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="framework.core.architecture.component" class="KeyboardInputComponent.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="61" endline="61" begincolumn="0" endcolumn="201" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="framework.core.architecture.component" class="KeyboardInputComponent.as" externalInfoUrl="" priority="3">Too long line (200 maximum, but 201 actually). </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/architecture/entity/EntityManager.as">
      <violation beginline="73" endline="73" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.unused.UnusedLocalVariable" ruleset="All Flex Rules" package="framework.core.architecture.entity" class="EntityManager.as" externalInfoUrl="" priority="1">This variable (keyboardInputComponent) is not used. </violation>
      <violation beginline="97" endline="97" begincolumn="72" endcolumn="72" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="framework.core.architecture.entity" class="EntityManager.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="111" endline="111" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="framework.core.architecture.entity" class="EntityManager.as" externalInfoUrl="" priority="1">This private method (hasAllComponents) does not seem to be used. </violation>
      <violation beginline="40" endline="40" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="framework.core.architecture.entity" class="EntityManager.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 11 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="48" endline="48" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="framework.core.architecture.entity" class="EntityManager.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/architecture/entity/IEntity.as">
      <violation beginline="32" endline="32" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="framework.core.architecture.entity" class="IEntity.as" externalInfoUrl="" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/architecture/entity/IEntityManager.as">
      <violation beginline="65" endline="65" begincolumn="65" endcolumn="65" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="framework.core.architecture.entity" class="IEntityManager.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="31" endline="31" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="framework.core.architecture.entity" class="IEntityManager.as" externalInfoUrl="" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/GameManager.as">
      <violation beginline="100" endline="100" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.unused.UnusedLocalVariable" ruleset="All Flex Rules" package="framework.core.system" class="GameManager.as" externalInfoUrl="" priority="1">This variable (entity) is not used. </violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="framework.core.system" class="GameManager.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 6 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="47" endline="47" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="framework.core.system" class="GameManager.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/GraphicManager.as">
      <violation beginline="72" endline="72" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="framework.core.system" class="GraphicManager.as" externalInfoUrl="" priority="1">This parameter (xmlName) of this function is not used. </violation>
      <violation beginline="136" endline="136" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="framework.core.system" class="GraphicManager.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="140" endline="140" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="framework.core.system" class="GraphicManager.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="160" endline="160" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="framework.core.system" class="GraphicManager.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="171" endline="171" begincolumn="56" endcolumn="56" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="framework.core.system" class="GraphicManager.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="framework.core.system" class="GraphicManager.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 19 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="framework.core.system" class="GraphicManager.as" externalInfoUrl="" priority="3">Too many public fields or functions detected (10 maximum, but 11 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="framework.core.system" class="GraphicManager.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="45" endline="45" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="framework.core.system" class="GraphicManager.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/IGameManager.as">
      <violation beginline="28" endline="28" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="framework.core.system" class="IGameManager.as" externalInfoUrl="" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/IGraphicManager.as">
      <violation beginline="66" endline="66" begincolumn="44" endcolumn="44" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="framework.core.system" class="IGraphicManager.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="78" endline="78" begincolumn="48" endcolumn="48" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="framework.core.system" class="IGraphicManager.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="29" endline="29" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="framework.core.system" class="IGraphicManager.as" externalInfoUrl="" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/IInterfaceManager.as">
      <violation beginline="28" endline="28" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="framework.core.system" class="IInterfaceManager.as" externalInfoUrl="" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/IKeyboardManager.as">
      <violation beginline="47" endline="47" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="framework.core.system" class="IKeyboardManager.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="53" endline="53" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="framework.core.system" class="IKeyboardManager.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="59" endline="59" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="framework.core.system" class="IKeyboardManager.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="28" endline="28" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="framework.core.system" class="IKeyboardManager.as" externalInfoUrl="" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/IMouseManager.as">
      <violation beginline="28" endline="28" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="framework.core.system" class="IMouseManager.as" externalInfoUrl="" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/InterfaceEvent.as">
      <violation beginline="29" endline="29" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="framework.core.system" class="InterfaceEvent.as" externalInfoUrl="" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/InterfaceManager.as">
      <violation beginline="62" endline="62" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.EmptyPrivateMethod" ruleset="All Flex Rules" package="framework.core.system" class="InterfaceManager.as" externalInfoUrl="" priority="1">This private method (initVar) is used but its content is empty. </violation>
      <violation beginline="87" endline="87" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.unused.UnusedLocalVariable" ruleset="All Flex Rules" package="framework.core.system" class="InterfaceManager.as" externalInfoUrl="" priority="1">This variable (menuScreen) is not used. </violation>
      <violation beginline="88" endline="88" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.unused.UnusedLocalVariable" ruleset="All Flex Rules" package="framework.core.system" class="InterfaceManager.as" externalInfoUrl="" priority="1">This variable (configScreen) is not used. </violation>
      <violation beginline="89" endline="89" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.unused.UnusedLocalVariable" ruleset="All Flex Rules" package="framework.core.system" class="InterfaceManager.as" externalInfoUrl="" priority="1">This variable (helpScreen) is not used. </violation>
      <violation beginline="90" endline="90" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.unused.UnusedLocalVariable" ruleset="All Flex Rules" package="framework.core.system" class="InterfaceManager.as" externalInfoUrl="" priority="1">This variable (aboutScreen) is not used. </violation>
      <violation beginline="91" endline="91" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.unused.UnusedLocalVariable" ruleset="All Flex Rules" package="framework.core.system" class="InterfaceManager.as" externalInfoUrl="" priority="1">This variable (adScreen) is not used. </violation>
      <violation beginline="92" endline="92" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.unused.UnusedLocalVariable" ruleset="All Flex Rules" package="framework.core.system" class="InterfaceManager.as" externalInfoUrl="" priority="1">This variable (gameScreen) is not used. </violation>
      <violation beginline="46" endline="46" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="framework.core.system" class="InterfaceManager.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="101" endline="101" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="framework.core.system" class="InterfaceManager.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/IRessourceManager.as">
      <violation beginline="108" endline="108" begincolumn="43" endcolumn="43" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="framework.core.system" class="IRessourceManager.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="120" endline="120" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="framework.core.system" class="IRessourceManager.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="30" endline="30" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="framework.core.system" class="IRessourceManager.as" externalInfoUrl="" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="30" endline="30" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="framework.core.system" class="IRessourceManager.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 16 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/IServerManager.as">
      <violation beginline="28" endline="28" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="framework.core.system" class="IServerManager.as" externalInfoUrl="" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/IXmlManager.as">
      <violation beginline="28" endline="28" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="framework.core.system" class="IXmlManager.as" externalInfoUrl="" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/KeyboardManager.as">
      <violation beginline="151" endline="151" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="framework.core.system" class="KeyboardManager.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="155" endline="155" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="framework.core.system" class="KeyboardManager.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="183" endline="183" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="framework.core.system" class="KeyboardManager.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="184" endline="184" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="framework.core.system" class="KeyboardManager.as" externalInfoUrl="" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="framework.core.system" class="KeyboardManager.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 20 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="framework.core.system" class="KeyboardManager.as" externalInfoUrl="" priority="3">Too many field detected (5 maximum, but 16 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="55" endline="55" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="framework.core.system" class="KeyboardManager.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/MouseManager.as">
      <violation beginline="54" endline="54" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.EmptyPrivateMethod" ruleset="All Flex Rules" package="framework.core.system" class="MouseManager.as" externalInfoUrl="" priority="1">This private method (initVar) is used but its content is empty. </violation>
      <violation beginline="38" endline="38" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="framework.core.system" class="MouseManager.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/RessourceManager.as">
      <violation beginline="136" endline="136" begincolumn="50" endcolumn="50" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="framework.core.system" class="RessourceManager.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="145" endline="145" begincolumn="54" endcolumn="54" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="framework.core.system" class="RessourceManager.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="34" endline="34" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="framework.core.system" class="RessourceManager.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 21 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="34" endline="34" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="framework.core.system" class="RessourceManager.as" externalInfoUrl="" priority="3">Too many public fields or functions detected (10 maximum, but 20 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="41" endline="41" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="framework.core.system" class="RessourceManager.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/ServerManager.as">
      <violation beginline="57" endline="57" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.EmptyPrivateMethod" ruleset="All Flex Rules" package="framework.core.system" class="ServerManager.as" externalInfoUrl="" priority="1">This private method (initVar) is used but its content is empty. </violation>
      <violation beginline="41" endline="41" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="framework.core.system" class="ServerManager.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/framework/core/system/XmlManager.as">
      <violation beginline="103" endline="103" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="framework.core.system" class="XmlManager.as" externalInfoUrl="" priority="1">This private method (onXmlLoadingProgress) does not seem to be used. </violation>
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="framework.core.system" class="XmlManager.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="41" endline="41" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="framework.core.system" class="XmlManager.as" externalInfoUrl="" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/utils/convert/StringTo.as">
      <violation beginline="35" endline="35" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="utils.convert" class="StringTo.as" externalInfoUrl="" priority="3">This test contains a hard coded boolean value. You could remove it by having 'condition'. </violation>
      <violation beginline="43" endline="43" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="utils.convert" class="StringTo.as" externalInfoUrl="" priority="3">This function is far too long (20 maximum, but 28 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="47" endline="47" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="utils.convert" class="StringTo.as" externalInfoUrl="" priority="3">This variable (tmp) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="59" endline="59" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="utils.convert" class="StringTo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="60" endline="60" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="utils.convert" class="StringTo.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="63" endline="63" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="utils.convert" class="StringTo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="64" endline="64" begincolumn="22" endcolumn="22" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="utils.convert" class="StringTo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="75" endline="75" begincolumn="22" endcolumn="22" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="utils.convert" class="StringTo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="76" endline="76" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="utils.convert" class="StringTo.as" externalInfoUrl="" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="79" endline="79" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="utils.convert" class="StringTo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="80" endline="80" begincolumn="23" endcolumn="23" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="utils.convert" class="StringTo.as" externalInfoUrl="" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/utils/convert/TabTo.as">
      <violation beginline="34" endline="34" begincolumn="41" endcolumn="41" rule="adobe.ac.pmd.rules.unused.UnusedParameter" ruleset="All Flex Rules" package="utils.convert" class="TabTo.as" externalInfoUrl="" priority="1">This parameter (_tab) of this function is not used. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/utils/loader/GraphicLoader.as">
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="utils.loader" class="GraphicLoader.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="83" endline="83" begincolumn="33" endcolumn="33" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="utils.loader" class="GraphicLoader.as" externalInfoUrl="" priority="1">Use strongly typed objects instead of *. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/utils/loader/LoaderDispatcher.as">
      <violation beginline="47" endline="47" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.EmptyStatement" ruleset="All Flex Rules" package="utils.loader" class="LoaderDispatcher.as" externalInfoUrl="" priority="1">This statement is empty. </violation>
   </file>
   <file name="D:/FlashGameMaker/FlashGameMaker/classes/utils/loader/SimpleLoader.as">
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="utils.loader" class="SimpleLoader.as" externalInfoUrl="" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
   </file>
</pmd>
